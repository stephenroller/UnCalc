
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = ';g%^\xc2\xa4q\xc3+\xf0\xc8\xc1\x02k\xe93'
    
_lr_action_items = {'LPAR':([0,1,8,12,13,14,16,17,],[1,1,1,1,1,1,1,1,]),'DIVIDE':([3,4,6,7,9,10,11,18,19,20,21,22,23,24,25,26,],[-13,-14,12,-12,-16,12,-11,-4,-15,-5,-9,-8,12,-10,12,12,]),'NUMBER':([0,1,8,12,13,14,15,16,17,],[4,4,4,4,4,4,4,4,4,]),'TIMES':([3,4,6,7,9,10,11,18,19,20,21,22,23,24,25,26,],[-13,-14,13,-12,-16,13,-11,-4,-15,-5,-9,-8,13,-10,13,13,]),'PLUS':([3,4,6,7,9,10,11,18,19,20,21,22,23,24,25,26,],[-13,-14,14,-12,-16,14,-11,-4,-15,-5,-9,-8,-6,-10,14,-7,]),'EXP':([3,4,6,7,9,10,11,18,19,20,21,22,23,24,25,26,],[-13,-14,15,-12,-16,15,-11,-4,-15,-5,15,15,15,-10,15,15,]),'IN':([3,4,6,7,9,11,18,19,20,21,22,23,24,26,],[-13,-14,16,-12,-16,-11,-4,-15,-5,-9,-8,-6,-10,-7,]),'RPAR':([3,4,7,9,10,11,18,19,20,21,22,23,24,26,],[-13,-14,-12,-16,20,-11,-4,-15,-5,-9,-8,-6,-10,-7,]),'MINUS':([0,1,3,4,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,],[8,8,-13,-14,17,-12,8,-16,17,-11,8,8,8,8,8,-4,-15,-5,-9,-8,-6,-10,17,-7,]),'UNIT':([0,1,3,4,8,9,12,13,14,16,17,],[9,9,9,-14,9,9,9,9,9,9,9,]),'$end':([2,3,4,5,6,7,9,11,18,19,20,21,22,23,24,25,26,],[-1,-13,-14,0,-2,-12,-16,-11,-4,-15,-5,-9,-8,-6,-10,-3,-7,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'units':([0,1,3,8,9,12,13,14,16,17,],[7,7,11,7,19,7,7,7,7,7,]),'expr':([0,1,8,12,13,14,15,16,17,],[3,3,3,3,3,3,24,3,3,]),'conversion':([0,],[2,]),'unit-expr':([0,1,8,12,13,14,16,17,],[6,10,18,21,22,23,25,26,]),'eval-expr':([0,],[5,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> eval-expr","S'",1,None,None,None),
  ('eval-expr -> conversion','eval-expr',1,'p_eval_expr','/Users/stephen/Working/conversion/parser.py',14),
  ('eval-expr -> unit-expr','eval-expr',1,'p_eval_expr','/Users/stephen/Working/conversion/parser.py',15),
  ('conversion -> unit-expr IN unit-expr','conversion',3,'p_conversion','/Users/stephen/Working/conversion/parser.py',20),
  ('unit-expr -> MINUS unit-expr','unit-expr',2,'p_expr_unary','/Users/stephen/Working/conversion/parser.py',25),
  ('unit-expr -> LPAR unit-expr RPAR','unit-expr',3,'p_expr_paren','/Users/stephen/Working/conversion/parser.py',29),
  ('unit-expr -> unit-expr PLUS unit-expr','unit-expr',3,'p_expr_binop','/Users/stephen/Working/conversion/parser.py',34),
  ('unit-expr -> unit-expr MINUS unit-expr','unit-expr',3,'p_expr_binop','/Users/stephen/Working/conversion/parser.py',35),
  ('unit-expr -> unit-expr TIMES unit-expr','unit-expr',3,'p_expr_binop','/Users/stephen/Working/conversion/parser.py',36),
  ('unit-expr -> unit-expr DIVIDE unit-expr','unit-expr',3,'p_expr_binop','/Users/stephen/Working/conversion/parser.py',37),
  ('unit-expr -> unit-expr EXP expr','unit-expr',3,'p_expr_binop','/Users/stephen/Working/conversion/parser.py',38),
  ('unit-expr -> expr units','unit-expr',2,'p_unit_expr','/Users/stephen/Working/conversion/parser.py',43),
  ('unit-expr -> units','unit-expr',1,'p_unit_expr_one','/Users/stephen/Working/conversion/parser.py',48),
  ('unit-expr -> expr','unit-expr',1,'p_unit_expr_one','/Users/stephen/Working/conversion/parser.py',49),
  ('expr -> NUMBER','expr',1,'p_expr_literal','/Users/stephen/Working/conversion/parser.py',54),
  ('units -> UNIT units','units',2,'p_units_units','/Users/stephen/Working/conversion/parser.py',59),
  ('units -> UNIT','units',1,'p_units_unit','/Users/stephen/Working/conversion/parser.py',63),
]
